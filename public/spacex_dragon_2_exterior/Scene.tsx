/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Jon Ross (https://sketchfab.com/zlsa)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/spacex-dragon-2-exterior-2575398db20c406cab2cf72b89a9be8b
title: SpaceX Dragon 2 exterior
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
    mesh_4: THREE.Mesh
    mesh_5: THREE.Mesh
    mesh_6: THREE.Mesh
    mesh_7: THREE.Mesh
    mesh_8: THREE.Mesh
  }
  materials: {
    draco_thruster: THREE.MeshStandardMaterial
    grey_plastic: THREE.MeshStandardMaterial
    ground: THREE.MeshStandardMaterial
    shiny_metal: THREE.MeshStandardMaterial
    windows: THREE.MeshStandardMaterial
    body: THREE.MeshStandardMaterial
    heatshield: THREE.MeshStandardMaterial
    trunk: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/scene.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.mesh_0.geometry} material={materials.draco_thruster} />
        <mesh geometry={nodes.mesh_1.geometry} material={materials.grey_plastic} />
        <mesh geometry={nodes.mesh_2.geometry} material={materials.ground} />
        <mesh geometry={nodes.mesh_3.geometry} material={materials.shiny_metal} />
        <mesh geometry={nodes.mesh_4.geometry} material={materials.windows} />
        <mesh geometry={nodes.mesh_5.geometry} material={nodes.mesh_5.material} />
        <mesh geometry={nodes.mesh_6.geometry} material={nodes.mesh_6.material} />
        <mesh geometry={nodes.mesh_7.geometry} material={materials.heatshield} />
        <mesh geometry={nodes.mesh_8.geometry} material={materials.trunk} />
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
